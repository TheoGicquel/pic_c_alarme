CCS PCH C Compiler, Version 4.104, 5967               21-janv.-20 18:01

               Filename: C:\Users\33695\Desktop\archi\gg.lst

               ROM used: 478 bytes (1%)
                         Largest free fragment is 32286
               RAM used: 24 (2%) at main() level
                         25 (2%) worst case
               Stack:    2 worst case (1 in main + 1 for interrupts)

*
0000:  GOTO   00D8
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  FF2.4
004A:  GOTO   0054
004E:  BTFSC  FF2.1
0050:  GOTO   00A2
0054:  BTFSS  FF0.3
0056:  GOTO   0060
005A:  BTFSC  FF0.0
005C:  GOTO   00AC
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVF   04,W
0098:  MOVFF  06,FE0
009C:  MOVFF  05,FD8
00A0:  RETFIE 0
.................... #include "C:\Users\33695\Desktop\archi\gg.h" 
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOOSCSEN              	//Oscillator switching is disabled, main oscillator is source 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
....................  
.................... #use delay(clock=20000000) 
*
00B2:  CLRF   FEA
00B4:  MOVLW  18
00B6:  MOVWF  FE9
00B8:  MOVF   FEF,W
00BA:  BZ    00D6
00BC:  MOVLW  06
00BE:  MOVWF  01
00C0:  CLRF   00
00C2:  DECFSZ 00,F
00C4:  BRA    00C2
00C6:  DECFSZ 01,F
00C8:  BRA    00C0
00CA:  MOVLW  7B
00CC:  MOVWF  00
00CE:  DECFSZ 00,F
00D0:  BRA    00CE
00D2:  DECFSZ FEF,F
00D4:  BRA    00BC
00D6:  RETLW  00
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
.................... int mem_pietons=0; 
....................  
.................... #int_EXT 
.................... void  EXT_isr(void)  
.................... { 
....................    mem_pietons=1; 
*
00A2:  MOVLW  01
00A4:  MOVWF  16
.................... } 
....................  
00A6:  BCF    FF2.1
00A8:  GOTO   0060
.................... #int_EXT1 
.................... void  EXT1_isr(void)  
.................... { 
....................  
.................... } 
....................  
....................  
....................  
00AC:  BCF    FF0.0
00AE:  GOTO   0060
.................... void main() 
.................... { 
*
00D8:  CLRF   FF8
00DA:  BCF    FD0.7
00DC:  BSF    07.7
00DE:  CLRF   FEA
00E0:  CLRF   FE9
00E2:  MOVLW  81
00E4:  MOVWF  FAF
00E6:  MOVLW  A6
00E8:  MOVWF  FAC
00EA:  MOVLW  90
00EC:  MOVWF  FAB
00EE:  CLRF   16
00F0:  BSF    FC1.0
00F2:  BSF    FC1.1
00F4:  BSF    FC1.2
00F6:  BCF    FC1.3
....................  
....................    setup_adc_ports(NO_ANALOGS); 
00F8:  BSF    FC1.0
00FA:  BSF    FC1.1
00FC:  BSF    FC1.2
00FE:  BCF    FC1.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
0100:  BCF    FC1.6
0102:  BCF    FC2.6
0104:  BCF    FC2.7
0106:  BCF    FC1.7
0108:  BSF    FC2.0
....................    setup_psp(PSP_DISABLED); 
010A:  BCF    F96.4
....................    setup_spi(SPI_SS_DISABLED); 
010C:  BCF    FC6.5
010E:  BCF    F94.5
0110:  BSF    F94.4
0112:  BCF    F94.3
0114:  MOVLW  01
0116:  MOVWF  FC6
0118:  MOVLW  00
011A:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
011C:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
011E:  MOVLW  80
0120:  MOVWF  FD5
....................    setup_timer_1(T1_DISABLED); 
0122:  CLRF   FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
0124:  MOVLW  00
0126:  MOVWF  FCA
0128:  MOVLW  00
012A:  MOVWF  FCB
....................    enable_interrupts(INT_EXT); 
012C:  BSF    FF2.4
....................    enable_interrupts(INT_EXT1); 
012E:  BSF    FF0.3
....................    enable_interrupts(GLOBAL); 
0130:  MOVLW  C0
0132:  IORWF  FF2,F
.................... //Setup_Oscillator parameter not selected from Intr Oscillator Config tab 
....................  
....................    output_d(0b100001);    
0134:  CLRF   F95
0136:  MOVLW  21
0138:  MOVWF  F8C
....................    while(true){ 
....................       delay_ms(5000); 
013A:  MOVLW  14
013C:  MOVWF  17
013E:  MOVLW  FA
0140:  MOVWF  18
0142:  RCALL  00B2
0144:  DECFSZ 17,F
0146:  BRA    013E
....................       if (mem_pietons==1) 
0148:  DECFSZ 16,W
014A:  BRA    017A
....................       { 
....................          output_d(0b010001); 
014C:  CLRF   F95
014E:  MOVLW  11
0150:  MOVWF  F8C
....................          delay_ms(1000);          
0152:  MOVLW  04
0154:  MOVWF  17
0156:  MOVLW  FA
0158:  MOVWF  18
015A:  RCALL  00B2
015C:  DECFSZ 17,F
015E:  BRA    0156
....................          output_d(0b001001); 
0160:  CLRF   F95
0162:  MOVLW  09
0164:  MOVWF  F8C
....................          delay_ms(1000); 
0166:  MOVLW  04
0168:  MOVWF  17
016A:  MOVLW  FA
016C:  MOVWF  18
016E:  RCALL  00B2
0170:  DECFSZ 17,F
0172:  BRA    016A
....................          output_d(0b100001); 
0174:  CLRF   F95
0176:  MOVLW  21
0178:  MOVWF  F8C
....................       }       
....................       delay_ms(5000); 
017A:  MOVLW  14
017C:  MOVWF  17
017E:  MOVLW  FA
0180:  MOVWF  18
0182:  RCALL  00B2
0184:  DECFSZ 17,F
0186:  BRA    017E
....................       if (input(pin_b7)) 
0188:  BSF    F93.7
018A:  BTFSS  F81.7
018C:  BRA    01DE
....................          { 
....................          output_d(0b010001); 
018E:  CLRF   F95
0190:  MOVLW  11
0192:  MOVWF  F8C
....................          delay_ms(1000);          
0194:  MOVLW  04
0196:  MOVWF  17
0198:  MOVLW  FA
019A:  MOVWF  18
019C:  RCALL  00B2
019E:  DECFSZ 17,F
01A0:  BRA    0198
....................          output_d(0b001100); 
01A2:  CLRF   F95
01A4:  MOVLW  0C
01A6:  MOVWF  F8C
....................          delay_ms(1000);          
01A8:  MOVLW  04
01AA:  MOVWF  17
01AC:  MOVLW  FA
01AE:  MOVWF  18
01B0:  RCALL  00B2
01B2:  DECFSZ 17,F
01B4:  BRA    01AC
....................          output_d(0b001010); 
01B6:  CLRF   F95
01B8:  MOVLW  0A
01BA:  MOVWF  F8C
....................          delay_ms(1000); 
01BC:  MOVLW  04
01BE:  MOVWF  17
01C0:  MOVLW  FA
01C2:  MOVWF  18
01C4:  RCALL  00B2
01C6:  DECFSZ 17,F
01C8:  BRA    01C0
....................          output_d(0b100001); 
01CA:  CLRF   F95
01CC:  MOVLW  21
01CE:  MOVWF  F8C
....................          delay_ms(1000); 
01D0:  MOVLW  04
01D2:  MOVWF  17
01D4:  MOVLW  FA
01D6:  MOVWF  18
01D8:  RCALL  00B2
01DA:  DECFSZ 17,F
01DC:  BRA    01D4
....................          } 
....................    } 
01DE:  BRA    013A
....................  
.................... } 
01E0:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0D   NOBROWNOUT WDT128 NOWDT BORV20 NOPUT
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NODEBUG NOLVP
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTB NOWRTC
   Word  7: 400F   NOEBTR NOEBTRB
